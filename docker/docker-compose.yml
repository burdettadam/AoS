services:
  # Keycloak Database
  keycloak-db:
    image: postgres:15
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - botct-network

  # Keycloak Authentication Server
  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      [
        "start-dev",
        "--import-realm",
        "--spi-theme-static-max-age=-1",
        "--spi-theme-cache-themes=false",
        "--spi-theme-cache-templates=false",
        "--import-realm-strategy=OVERWRITE_EXISTING",
      ]
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
      - ./keycloak/themes:/opt/keycloak/themes:z
    networks:
      - botct-network

  # BotCT Server
  botct-server:
    build:
      context: ..
      dockerfile: docker/server/Dockerfile
    env_file:
      - .env.docker
    environment:
      NODE_ENV: development
      PORT: 3001
      OLLAMA_BASE_URL: http://ollama:11434
    volumes:
      - ../packages/server:/app/packages/server
      - ../packages/shared:/app/packages/shared
      - ../data:/app/data
      - /app/packages/server/node_modules
      - /app/packages/shared/node_modules
    ports:
      - "3001:3001"
    networks:
      - botct-network
    depends_on:
      - keycloak
      - ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # BotCT Client (accessible directly on port 5173)
  botct-client:
    build:
      context: ..
      dockerfile: docker/client/Dockerfile
    env_file:
      - .env.docker
    environment:
      NODE_ENV: development
    volumes:
      - ../packages/client:/app/packages/client
      - ../packages/shared:/app/packages/shared
      - /app/packages/client/node_modules
      - /app/packages/shared/node_modules
    ports:
      - "5173:5173"
    networks:
      - botct-network
    depends_on:
      - botct-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama LLM Server for AI NPCs
  ollama:
    image: ollama/ollama:latest
    container_name: botct-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - botct-network
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Start Ollama server (models can be pulled manually)

volumes:
  keycloak_data:
  ollama_data:

networks:
  botct-network:
    driver: bridge
